rootProject.name = 'open_audio_books_api'
include 'core'
include 'api'
include 'infra'

dependencyResolutionManagement {
    versionCatalogs {
        libs {
            def springBoot = version('spring-boot', '3.3.1')
            plugin('spring-boot', 'org.springframework.boot').versionRef(springBoot)
            plugin('spring-dependency-management', 'io.spring.dependency-management').version('1.1.5')
            library('spring-boot', 'org.springframework.boot', 'spring-boot').versionRef(springBoot)
            library('spring-boot-starter', 'org.springframework.boot', 'spring-boot-starter').versionRef(springBoot)
            library('spring-boot-starter-data-jpa', 'org.springframework.boot', 'spring-boot-starter-data-jpa').versionRef(springBoot)
            library('spring-boot-starter-web', 'org.springframework.boot', 'spring-boot-starter-web').versionRef(springBoot)
            library('spring-boot-starter-test', 'org.springframework.boot', 'spring-boot-starter-test').versionRef(springBoot)
            library('spring-boot-devtools', 'org.springframework.boot', 'spring-boot-devtools').versionRef(springBoot)
            library('model-mapper', 'org.modelmapper:modelmapper:3.2.0')
            library('lombok', 'org.projectlombok:lombok:1.18.34')
            library('slf4j-api', 'org.slf4j:slf4j-api:2.0.13')
            def junit5 = version('junit5', '5.10.0')
            library('junit-jupiter', 'org.junit.jupiter', 'junit-jupiter').versionRef(junit5)
            library('junit-bom', 'org.junit', 'junit-bom').versionRef(junit5)
        }
    }
}
